#
# Copyright (c) 2024 Dmitry Arkhipov (grisumbras@yandex.ru)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

using boost-debugger-utils ;

import boost-debugger-utils ;
import python ;

project example ;

boost-debugger-utils.embed-gdb-extension gdb_printers.hpp
    : include/example/gdb_printers.py
    : <location>include/example
      # we set the header guard macro to something more project-specific
      <flags>--header-guard=EXAMPLE_GDB_PRINTERS_HPP
      # we don't put a disable macro into the generated header, instead we wrap
      # inclusions of that header with a disable macro
      # (also see include/example/all.hpp)
      <flags>--disable-macro=
    ;
# the pretty printers header is marked to be never ready, so that you could
# always request to regenerate it
always gdb_printers.hpp ;
# convenience target to regenerate the pretty printers header
alias regenerate-printers : gdb_printers.hpp ;
# we avoid making the ability to regenerate pretty printers a hard requirement
# of building the project
explicit regenerate-printers gdb_printers.hpp ;

local printers-dependency ;
if [ python.configured ]
{
    printers-dependency = gdb_printers.hpp ;
}

lib example
    : src/example.cpp
    : <include>include
      # if possible we make the library dependent on the embedded printers,
      # so that any change to the printers is reflected in the binary
      <dependency>$(printers-dependency)
    : usage-requirements <include>include
    ;

install install-lib : example : <location>(libdir) ;
# install GDB pretty printers together with headers,
# so that users could load them manually
install install-headers
    : [ glob-tree-ex include : *.* ]
    : <install-source-root>include
      <location>(includedir)
    ;
alias install : install-lib install-headers ;
explicit install install-lib install-headers ;

build-project test ;
